name: JIT Planner Continuous Integration

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  pull_request: # all PRs and subsequent push events to them
  push: # just in case we merge to those without a PR
    branches: [master, development]
  workflow_dispatch:

env:
  DB_HOST: 127.0.0.1
  DB_PORT: 3306
  MYSQL_DATABASE: jit_planner_test
  MYSQL_USER: user
  MYSQL_PASSWORD: password

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: base-ubuntu-22.04

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Yarn install
        uses: borales/actions-yarn@v4
        with:
          cmd: install

      - name: Yarn build
        uses: borales/actions-yarn@v4
        with:
          cmd: build

  test:
    runs-on: base-ubuntu-22.04

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    services:
      mysql:
        image: public.ecr.aws/docker/library/mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
          MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
          MYSQL_USER: ${{ env.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ env.MYSQL_PASSWORD }}
        ports:
          - 3306:3306
        options: --name mysql --hostname mysql

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # - name: Add timezones to mysql container
      #   run: |
      #     mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql --user root mysql -p$MYSQL_ROOT_PASSWORD --host 127.0.0.1 --port 3306

      # We will inject the environment variables directly
      - name: Remove environment test file
        run: |
          rm .env.test

      # - name: Create database
      #   run: |
      #     mysql --host=127.0.0.1 --port=3306 --user=root --password=root -e "CREATE SCHEMA jit_planner_test"

      - name: Yarn install
        uses: borales/actions-yarn@v4
        with:
          cmd: install

      - name: Yarn lint
        uses: borales/actions-yarn@v4
        with:
          cmd: lint

      - name: Yarn test
        uses: borales/actions-yarn@v4
        with:
          cmd: test
        env:
          NODE_ENV: 'test'
          DB_NAME: ${{ env.MYSQL_DATABASE }}
          DB_USER: ${{ env.MYSQL_USER }}
          DB_PASSWORD: ${{ env.MYSQL_PASSWORD }}
          DB_HOST: ${{ env.DB_HOST }}
          DB_PORT: ${{ env.DB_PORT }}
